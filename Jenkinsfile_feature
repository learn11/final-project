pipeline {
    agent {
        kubernetes {
            yaml '''
            apiVersion: v1
            kind: Pod
            spec:
                containers:
                  - name: slave
                    image: docker:latest
                    tty: true
                    securityContext:
                        privileged: true
                  - name: pytest
                    image: mikey8520/tests
                    tty: true
                    securityContext:
                        privileged: true
                  - name: maven
                    image: maven:alpine
                    command:
                    - cat
                    tty: true
                  - name: busybox
                    image: busybox
                    command:
                    - sleep
                    - "3600"
                    tty: true
            '''
        }
    }

    environment {
        GITHUB_TOKEN = credentials('github') // Assuming you have set the GitHub token as a Jenkins credential with ID 'github'
    }

    stages {
        stage('checkout git') {
            steps {
                script {
                    // Checkout the code from the repository using the GitHub token
                    checkout([$class: 'GitSCM',
                              branches: [[name: '*/main']],
                              userRemoteConfigs: [[
                                  url: 'https://github.com/learn11/sela-project.git',
                                  credentialsId: 'github'
                              ]]])
                }
            }
        }

        stage('testing with pytest') {
            steps {
                container('pytest') {
                    // Run pytest within the pytest container
                    script {
                        sh 'cd ./fast_api && python -m pytest'
                    }
                }
            }
        }

        stage('Merge to main') {
            steps {
                script {
                    // Configure Git user details
                    sh 'git config --global user.email "jenkins@example.com"'
                    sh 'git config --global user.name "Jenkins"'

                    // Checkout the main branch
                    sh 'git checkout main'

                    // Merge the feature branch into main
                    sh 'git merge origin/feature --no-ff -m "Merge branch '\''feature'\''"'

                    // Push changes to origin main branch using GitHub token
                    withCredentials([string(credentialsId: 'github_token', variable: 'GITHUB_TOKEN')]) {
                        sh "git push -u origin main"
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline POST:'
        }
        success {
            echo 'Pipeline SUCCESS!'
        }
        failure {
            echo 'Pipeline FAILED, check the logs for more information!'
        }
    }
}
